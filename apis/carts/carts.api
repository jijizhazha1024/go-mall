syntax = "v1"

type (
	// 购物车条目列表响应
	UserInfo  {}
	CartItemListResp {
		Total    int32               `json:"total"`
		CartInfo []*CartInfoResponse `json:"cart_info"`
	}
	CartInfoResponse {
		Id        int32         `json:"id"`
		UserId    int32         `json:"user_id"`
		ProductId int32         `json:"product_id"`
		Quantity  int32         `json:"quantity"`
		Product   []interface{} `json:"product"`
	}
	// 购物车条目请求，用于添加购物车项
	CreateCartReq {
		ProductId int32 `json:"product_id"`
	}
	CreateCartResp {
		Id int32 `json:"id"`
	}
	// 购物车条目请求，用于扣减购物车项
	SubCartReq {
		ProductId int32 `json:"product_id"`
	}
	SubCartResp {
		Id int32 `json:"id"`
	}
	//购物车条目删除请求
	DeleteCartReq {
		ProductId int32 `json:"product_id"`
	}
	DeleteCartResp {
		Success bool `json:"success"`
	}
)

@server (
	middleware: WithClientMiddleware,WrapperAuthMiddleware
	prefix:     /douyin/carts
)
service carts-api {
	// 获取用户的购物车信息
	@handler CartItemListHandler
	get /list (UserInfo) returns (CartItemListResp)

	// 增加商品到购物车
	@handler CreateCartItemHandler
	post /add (CreateCartReq) returns (CreateCartResp)

	//扣减商品到购物车
	@handler SubCartItemHandler
	post /sub (SubCartReq) returns (SubCartResp)

	// 删除购物车条目
	@handler DeleteCartItemHandler
	delete /delete (DeleteCartReq) returns (DeleteCartResp)
}

