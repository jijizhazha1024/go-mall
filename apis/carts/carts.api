syntax = "v1"

type (
	// 购物车条目列表响应
	UserInfo {
		Id int32
	}
	CartItemListResp {
		Total    int32               `json:"total"`
		CartInfo []*CartInfoResponse `json:"cart_info"`
	}
	CartInfoResponse {
		Id        int32 `json:"id"`
		UserId    int32 `json:"user_id"`
		ProductId int32 `json:"product_id"`
		Quantity  int32 `json:"quantity"`
		Checked   bool  `json:"checked"`
	}
	// 购物车条目请求，用于添加或更新购物车项
	CreateCartReq {
		UserId       int32   `json:"user_id"`
		ProductId    int32   `json:"product_id"`
		ProductName  string  `json:"product_name"`
		ProuctImage  string  `json:"prouct_image"`
		ProductPrice float32 `json:"product_price"`
		Quantity     int32   `json:"quantity"`
		Checked      bool    `json:"checked"`
	}
	CreateCartResp {
		Id int32 `json:"id"`
	}
	//购物车条目删除请求
	DeleteCartReq {
		Id           int32   `json:"id"`
		UserId       int32   `json:"user_id"`
		ProductId    int32   `json:"product_id"`
		ProductName  string  `json:"product_name"`
		ProuctImage  string  `json:"prouct_image"`
		ProductPrice float32 `json:"product_price"`
		Quantity     int32   `json:"quantity"`
		Checked      bool    `json:"checked"`
	}
	DeleteCartResp {
		Success bool `json:"success"`
	}
)

@server (
	middleware: WithClientMiddleware,WrapperAuthMiddleware
	prefix:     /douyin/carts
)
service carts-api {
	// 获取用户的购物车信息
	@handler CartItemListHandler
	get /:id (UserInfo) returns (CartItemListResp)

	// 添加商品到购物车
	@handler CreateCartItemHandler
	post / (CreateCartReq) returns (CreateCartResp)

	// 删除购物车条目
	@handler DeleteCartItemHandler
	delete /:id (DeleteCartReq) returns (DeleteCartResp)
}

