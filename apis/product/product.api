syntax = "v1"

// 请求结构体
type (
	GetProductListReq {
		Page     int64 `json:"page"` // 当前页码，默认为1
		PageSize int64 `json:"pageSize"` // 每页大小，默认为10
	}
	GetProductByIDReq {
		ID int64 `form:"id" json:"id"` // 商品ID（路径参数）
	}
)

// 响应结构体
type (
	GetProductListResp {
		Products []*Product `json:"products"` // 商品列表（简略信息）
		Total    int64      `json:"total"` // 总记录数
		Page     int64      `json:"page"` // 当前页码
		PageSize int64      `json:"pageSize"` // 每页大小
	}
	GetProductByIDResp {
		ID          int64    `json:"id"` // 商品ID
		Name        string   `json:"name"` // 商品名称
		Description string   `json:"description"` // 商品描述
		Picture     string   `json:"picture"` // 商品图片URL
		Stock       int64    `json:"stock"` // 商品库存
		Price       float64  `json:"price"` // 商品价格
		Categories  []string `json:"categories"` // 商品分类
	}
)

// 商品结构体（简略信息）
type (
	Product {
		ID    int64   `json:"id"` // 商品ID
		Name  string  `json:"name"` // 商品名称
		Stock int64   `json:"stock"` // 商品库存
		Price float64 `json:"price"` // 商品价格
	}
)

// 服务定义
@server (
	middleware: WithClientMiddleware,WrapperAuthMiddleware // 中间件
	prefix:     /douyin/product // 路由前缀
)
service product-api {
	// 查询商品列表（分页）
	@handler GetProductListHandler
	get /list (GetProductListReq) returns (GetProductListResp)

	// 根据ID查询商品详情
	@handler GetProductByIDHandler
	get / (GetProductByIDReq) returns (GetProductByIDResp)
}

