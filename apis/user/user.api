syntax = "v1"

type (
	// 用户注册请求
	RegisterRequest {
		Email           string `json:"email"`
		Password        string `json:"password"`
		ConfirmPassword string `json:"confirmPassword"`
	}
	// 用户注册响应
	RegisterResponse {
		AccessToken  string `json:"access_token"`
		RefreshToken string `json:"refresh_token"`
	}
	// 用户登录请求
	LoginRequest {
		Email    string `json:"email"`
		Password string `json:"password"`
	}
	// 用户登录响应
	LoginResponse {
		AccessToken  string `json:"access_token"`
		RefreshToken string `json:"refresh_token"`
	}
	// 用户登出请求
	LogoutRequest  {}
	// 用户登出响应
	LogoutResponse {
		logout_at int64 `json:"logout_at"`
	}
	// 删除用户请求
	DeleteRequest  {}
	// 删除用户响应
	DeleteResponse  {}
	// 更新用户请求
	UpdateRequest {
		UserName string `json:"user_name"`
		Avatar   string `json:"avatar"`
	}
	// 更新用户响应
	UpdateResponse {
		UserId   int64  `json:"user_id"`
		UserName string `json:"user_name"`
		Avatar   string `json:"avatar"`
	}
	// 获取用户信息请求
	GetInfoRequest  {}
	// 获取用户信息响应
	GetInfoResponse {
		UserId    int64  `json:"user_id"`
		LogoutAt  string `json:"logout_at"`
		CreatedAt string `json:"created_at"`
		UpdateAt  string `json:"update_at"`
		Email     string `json:"email"`
		UserName  string `json:"user_name"`
		Avatar    string `json:"avatar"`
	}
	//  通用地址结构
	AddressResponse {
		ID              string `json:"id"`
		RecipientName   string `json:"recipient_name"`
		PhoneNumber     string `json:"phone_number"`
		Province        string `json:"province"`
		City            string `json:"city"`
		DetailedAddress string `json:"detailed_address"`
		IsDefault       string `json:"is_default"`
		CreatedAt       string `json:"created_at"`
		UpdatedAt       string `json:"updated_at"`
	}
	// 添加新地址的请求消息
	AddAddressRequest {
		RecipientName   string `json:"recipient_name"`
		PhoneNumber     string `json:"phone_number"`
		Province        string `json:"province"`
		City            string `json:"city"`
		DetailedAddress string `json:"detailed_address"`
		IsDefault       bool   `json:"is_default"`
	}
	// 添加新地址的响应消息
	AddAddressResponse {
		Data AddressData `json:"data"`
	}
	// 请求删除地址的消息
	DeleteAddressRequest {
		AddressID int32 `json:"address_id"`
	}
	// 删除地址的响应消息
	DeleteAddressResponse  {}
	// 请求修改地址的消息
	UpdateAddressRequest {
		RecipientName   string `json:"recipient_name"`
		PhoneNumber     string `json:"phone_number"`
		Province        string `json:"province"`
		City            string `json:"city"`
		DetailedAddress string `json:"detailed_address"`
		IsDefault       bool   `json:"is_default"`
		AddressID       int32  `json:"address_id"`
	}
	// 修改地址的响应消息
	UpdateAddressResponse {
		Data AddressData `json:"data"`
	}
	// 获取所有地址的响应消息中的地址数据列表
	AddressListResponse {
		Data []AddressData `json:"data"`
	}
	// 获取单个地址的响应消息
	GetAddressResponse {
		Data AddressData `json:"data"`
	}
	// 地址数据消息
	AddressData {
		AddressID       int32  `json:"address_id"`
		RecipientName   string `json:"recipient_name"`
		PhoneNumber     string `json:"phone_number"`
		Province        string `json:"province"`
		City            string `json:"city"`
		DetailedAddress string `json:"detailed_address"`
		IsDefault       bool   `json:"is_default"`
		CreatedAt       string `json:"created_at"` // ISO8601 时间转换为时间戳
		UpdatedAt       string `json:"updated_at"` // ISO8601 时间转换为时间戳
	}
	// 获取所有地址的请求消息
	AllAddressListRequest  {}
	// 获取单个地址的请求消息
	GetAddressRequest {
		AddressID int32 `json:"address_id"`
	}
)

@server (
	// 代表当前 service 代码块下的路由生成代码时都会被放到 auth 目录下
	// 定义路由前缀为
	middleware: WithClientMiddleware,WrapperAuthMiddleware
	prefix:     /douyin/user
)
service user-api {
	@handler RegisterHandler
	post /register (RegisterRequest) returns (RegisterResponse)

	@handler LoginHandler
	post /login (LoginRequest) returns (LoginResponse)

	@handler LogoutHandler
	post /logout (LogoutRequest) returns (LogoutResponse)

	@handler DeleteHandler
	post /delete (DeleteRequest) returns (DeleteResponse)

	@handler UpdateHandler
	put /update (UpdateRequest) returns (UpdateResponse)

	@handler GetInfoHandler
	get /info (GetInfoRequest) returns (GetInfoResponse)

	@handler AddAddressHandler
	post /address (AddAddressRequest) returns (AddAddressResponse)

	@handler DeleteAddressHandler
	delete /address (DeleteAddressRequest) returns (DeleteAddressResponse)

	@handler UpdateAddressHandler
	put /address (UpdateAddressRequest) returns (UpdateAddressResponse)

	@handler AllAddressListHandler
	get /address/list (AllAddressListRequest) returns (AddressListResponse)

	@handler GetAddressHandler
	get /address (GetAddressRequest) returns (GetAddressResponse)
}

