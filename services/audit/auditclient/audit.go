// Code generated by goctl. DO NOT EDIT.
// Source: audit.proto

package auditclient

import (
	"context"

	"jijizhazha1024/go-mall/services/audit/audit"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateAuditLogReq = audit.CreateAuditLogReq
	CreateAuditLogRes = audit.CreateAuditLogRes

	Audit interface {
		// CreateAuditLog 创建审计日志
		CreateAuditLog(ctx context.Context, in *CreateAuditLogReq, opts ...grpc.CallOption) (*CreateAuditLogRes, error)
	}

	defaultAudit struct {
		cli zrpc.Client
	}
)

func NewAudit(cli zrpc.Client) Audit {
	return &defaultAudit{
		cli: cli,
	}
}

// CreateAuditLog 创建审计日志
func (m *defaultAudit) CreateAuditLog(ctx context.Context, in *CreateAuditLogReq, opts ...grpc.CallOption) (*CreateAuditLogRes, error) {
	client := audit.NewAuditClient(m.cli.Conn())
	return client.CreateAuditLog(ctx, in, opts...)
}
