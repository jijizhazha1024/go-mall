// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: checkout.proto

package server

import (
	"context"

	"jijizhazha1024/go-mall/services/checkout/checkout"
	"jijizhazha1024/go-mall/services/checkout/internal/logic"
	"jijizhazha1024/go-mall/services/checkout/internal/svc"
)

type CheckoutServiceServer struct {
	svcCtx *svc.ServiceContext
	checkout.UnimplementedCheckoutServiceServer
}

func NewCheckoutServiceServer(svcCtx *svc.ServiceContext) *CheckoutServiceServer {
	return &CheckoutServiceServer{
		svcCtx: svcCtx,
	}
}

// 预结算（生成预订单）
func (s *CheckoutServiceServer) PrepareCheckout(ctx context.Context, in *checkout.CheckoutReq) (*checkout.CheckoutResp, error) {
	l := logic.NewPrepareCheckoutLogic(ctx, s.svcCtx)
	return l.PrepareCheckout(in)
}

// 由订单服务触发
func (s *CheckoutServiceServer) ReleaseCheckout(ctx context.Context, in *checkout.ReleaseReq) (*checkout.ReleaseResp, error) {
	l := logic.NewReleaseCheckoutLogic(ctx, s.svcCtx)
	return l.ReleaseCheckout(in)
}

func (s *CheckoutServiceServer) UpdateCheckoutStatus2Success(ctx context.Context, in *checkout.UpdateCheckoutStatusReq) (*checkout.UpdateCheckoutStatusResp, error) {
	l := logic.NewUpdateCheckoutStatus2SuccessLogic(ctx, s.svcCtx)
	return l.UpdateCheckoutStatus2Success(in)
}

func (s *CheckoutServiceServer) GetCheckoutList(ctx context.Context, in *checkout.CheckoutListReq) (*checkout.CheckoutListResp, error) {
	l := logic.NewGetCheckoutListLogic(ctx, s.svcCtx)
	return l.GetCheckoutList(in)
}

func (s *CheckoutServiceServer) GetCheckoutDetail(ctx context.Context, in *checkout.CheckoutDetailReq) (*checkout.CheckoutDetailResp, error) {
	l := logic.NewGetCheckoutDetailLogic(ctx, s.svcCtx)
	return l.GetCheckoutDetail(in)
}
