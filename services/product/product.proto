syntax = "proto3";

package product;

option go_package = "./product";

service ProductCatalogService {
  // 根据商品id得到商品详细信息
  rpc GetProduct(GetProductReq) returns (GetProductResp) {}
  // 添加新商品
  rpc CreateProduct(CreateProductReq) returns (CreateProductResp) {}
  // 修改商品
  rpc UpdateProduct(UpdateProductReq) returns (UpdateProductResp) {}
  // 删除商品
  rpc DeleteProduct(DeleteProductReq) returns (DeleteProductResp) {}
  // 分页得到全部商品
  rpc GetAllProduct(GetAllProductsReq) returns (GetAllProductsResp){}
  // 判断商品是否存在
  rpc IsExistProduct(IsExistProductReq) returns(IsExistProductResp){}
<<<<<<< HEAD

=======
  // 根据条件查询商品
  rpc QueryProduct(QueryProductReq) returns(GetAllProductsResp){}
}

message QueryProductReq{
  string name = 1;
  bool new = 2;
  bool hot = 3;
  string keyword = 4;
  repeated string category = 5;
  message Price{
    int64 min = 1; // 最低价格
    int64 max = 2; // 最高价格
  }
  Price price = 6;
  message Paginator{
    int64 page = 1;
    int64 pageSize = 2;
  }
  Paginator paginator = 7;
>>>>>>> feat/lzb/product
}



message Product {
  uint32 id = 1;
  string name = 2;
  string description = 3;
  string picture = 4;
  int64 price = 5; // 使用分作为单位，方便计算，避免精度丢失
  int64 stock = 6;
  int64 sold = 7;
  repeated string categories = 8;
  string crated_at = 9;
  string updated_at = 10;
}
message IsExistProductReq{
  int64 id = 1 ; //商品id
}
message IsExistProductResp{
  uint32 status_code = 1; // 状态码
  string status_msg = 2; // 状态描述
  bool exist = 3;
}
message GetAllProductsReq{
  int64 page = 1;
  int64 pageSize = 2;
}
message GetAllProductsResp {
  uint32 status_code = 1; // 状态码
  string status_msg = 2; // 状态描述
  int64 total = 3;
  repeated Product products = 4;
  int64 page = 5;
  int64 pageSize = 6;

}

message GetProductReq {
  uint32 id = 1;
}

message GetProductResp {
  uint32 status_code = 1; // 状态码
  string status_msg = 2; // 状态描述

  Product product = 3;
}
message  CreateProductReq{
  string name = 1;
  string description = 2;
  bytes picture = 3;
  int64 price = 4;
  int64 stock = 5;
  repeated string categories = 6;
}
message CreateProductResp{
  uint32 status_code = 1; // 状态码
  string status_msg = 2; // 状态描述

  int64 product_id = 3;// 商品id
}
message UpdateProductReq{
  int64 id = 1;
  string name = 2;
  string description = 3;
  bytes picture = 4;
  int64 price = 5; // 使用分作为单位，方便计算，避免精度丢失
  int64 stock = 6;
  repeated string categories = 8;
}
message UpdateProductResp{
  uint32 status_code = 1; // 状态码
  string status_msg = 2; // 状态描述

  int64 id = 3;// 商品id
}
message DeleteProductReq{
  int64 id = 1;
}
message DeleteProductResp{
  uint32 status_code = 1; // 状态码
  string status_msg = 2; // 状态描述

}