// Code generated by goctl. DO NOT EDIT.
// Source: inventory.proto

package inventoryclient

import (
	"context"

	"jijizhazha1024/go-mall/services/inventory/inventory"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetInventoryReq  = inventory.GetInventoryReq
	GetInventoryResp = inventory.GetInventoryResp
	InventoryReq     = inventory.InventoryReq
	InventoryResp    = inventory.InventoryResp

	Inventory interface {
		// GetInventory 查询库存
		GetInventory(ctx context.Context, in *GetInventoryReq, opts ...grpc.CallOption) (*GetInventoryResp, error)
		// UpdateInventory 增加库存
		UpdateInventory(ctx context.Context, in *InventoryReq, opts ...grpc.CallOption) (*InventoryResp, error)
		// DecreaseInventory 扣减库存
		DecreaseInventory(ctx context.Context, in *InventoryReq, opts ...grpc.CallOption) (*InventoryResp, error)
		// ReturnInventory 归还库存
		ReturnInventory(ctx context.Context, in *InventoryReq, opts ...grpc.CallOption) (*InventoryResp, error)
	}

	defaultInventory struct {
		cli zrpc.Client
	}
)

func NewInventory(cli zrpc.Client) Inventory {
	return &defaultInventory{
		cli: cli,
	}
}

// GetInventory 查询库存
func (m *defaultInventory) GetInventory(ctx context.Context, in *GetInventoryReq, opts ...grpc.CallOption) (*GetInventoryResp, error) {
	client := inventory.NewInventoryClient(m.cli.Conn())
	return client.GetInventory(ctx, in, opts...)
}

// UpdateInventory 增加库存
func (m *defaultInventory) UpdateInventory(ctx context.Context, in *InventoryReq, opts ...grpc.CallOption) (*InventoryResp, error) {
	client := inventory.NewInventoryClient(m.cli.Conn())
	return client.UpdateInventory(ctx, in, opts...)
}

// DecreaseInventory 扣减库存
func (m *defaultInventory) DecreaseInventory(ctx context.Context, in *InventoryReq, opts ...grpc.CallOption) (*InventoryResp, error) {
	client := inventory.NewInventoryClient(m.cli.Conn())
	return client.DecreaseInventory(ctx, in, opts...)
}

// ReturnInventory 归还库存
func (m *defaultInventory) ReturnInventory(ctx context.Context, in *InventoryReq, opts ...grpc.CallOption) (*InventoryResp, error) {
	client := inventory.NewInventoryClient(m.cli.Conn())
	return client.ReturnInventory(ctx, in, opts...)
}
