// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.5
// Source: payment.proto

package paymentclient

import (
	"context"

	"jijizhazha1024/go-mall/services/payment/payment"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	PaymentItem               = payment.PaymentItem
	PaymentListReq            = payment.PaymentListReq
	PaymentListReq_Pagination = payment.PaymentListReq_Pagination
	PaymentListResp           = payment.PaymentListResp
	PaymentReq                = payment.PaymentReq
	PaymentResp               = payment.PaymentResp

	Payment interface {
		CreatePayment(ctx context.Context, in *PaymentReq, opts ...grpc.CallOption) (*PaymentResp, error)
		ListPayments(ctx context.Context, in *PaymentListReq, opts ...grpc.CallOption) (*PaymentListResp, error)
	}

	defaultPayment struct {
		cli zrpc.Client
	}
)

func NewPayment(cli zrpc.Client) Payment {
	return &defaultPayment{
		cli: cli,
	}
}

func (m *defaultPayment) CreatePayment(ctx context.Context, in *PaymentReq, opts ...grpc.CallOption) (*PaymentResp, error) {
	client := payment.NewPaymentClient(m.cli.Conn())
	return client.CreatePayment(ctx, in, opts...)
}

func (m *defaultPayment) ListPayments(ctx context.Context, in *PaymentListReq, opts ...grpc.CallOption) (*PaymentListResp, error) {
	client := payment.NewPaymentClient(m.cli.Conn())
	return client.ListPayments(ctx, in, opts...)
}
